"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os 
import environ



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-htqbfk3-1w_y16-^ep)m-6l_x(bz@5p!m(6b!gvzylj_y-!9n@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'user',
    'rest_framework',
    'design_project', 
    'fast_design', 
    "widget_tweaks",

    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [ os.path.join(BASE_DIR, 'static') ]  # لو عندك مجلد static في المشروع

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # مجلد هيجمع فيه كل ملفات static
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media Files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Initialize environment variables
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))


# Read the variable
NGROK_KEY = env("NGROK_KEY")



# This for handling templates .html paths use it in Views 

TEMPLATES_PATHS = {
    "user":{
        "user_page": "pages/user/user_page.html",
        "user_settings": "pages/user/settings.html",
    }, 
    "edit":{
        "edit_room": "pages/edit/edit_room.html", 
        "edit_with_ai": "pages/edit/edit_with_ai.html",
        "fast_design_edit_with_ai": "pages/edit/fast_design_edit_with_ai.html", 
    },
    "generate":{
        "fast_design_generate": "pages/generate/fast_design.html",
        "project": "pages/generate/project.html", 
    }, 
    "history":{
        "fast_design_history": "pages/history/fast_design_history.html", 
        "project_history": "pages/history/projects_history.html",
    }, 
    "forms":{
        "new_fast_design":"forms/new_fast_design.html",
        "new_project": "forms/new_project.html", 
        "login": "forms/login.html",
        "signup": "forms/signup.html", 
    },
    "admin":{
        "admin_dash_bord": "pages/admin/dash_bord.html", 
        "user_logs": "pages/admin/user_logs.html",
        "projects_logs": "pages/admin/project_logs.html",
        "fast_design_logs": "pages/admin/generation_logs.html", 
        
    },
    "details":{
        "project_details": "pages/details/project_detail.html",
    },
    "base": "base.html",
    "hello": "hello.html",
    
}